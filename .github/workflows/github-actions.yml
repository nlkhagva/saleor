name: UShop Pipeline
on: [push]
jobs:
  Build-Image-Push-To-ECR:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Create env file
        run: |
          touch .env
          echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_MEDIA_BUCKET_NAME=${{ secrets.AWS_MEDIA_BUCKET_NAME }} >> .env
          echo AWS_MEDIA_CUSTOM_DOMAIN=${{ secrets.AWS_MEDIA_CUSTOM_DOMAIN }} >> .env
          echo AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} >> .env
          echo AWS_STATIC_CUSTOM_DOMAIN=${{ secrets.AWS_STATIC_CUSTOM_DOMAIN }} >> .env
          echo ALLOWED_CLIENT_HOSTS=${{ secrets.ALLOWED_CLIENT_HOSTS }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo EMAIL_URL=${{ secrets.EMAIL_URL }} >> .env
          echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env
          cat .env
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ushop
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
